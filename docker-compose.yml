services:
  db:
    image: postgres
    volumes:
      - data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${POSTGRES_DB} 
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - 5432:5432
  backend:
    image: book-keeper/api
    build:
      context: ./backend
    entrypoint: poetry run python manage.py runserver 0.0.0.0:8000
    environment:
      - ENVIRONMENT=development
      - DEBUG=True
      - SECRET_KEY=${DJANGO_SECRET_KEY}
      - POSTGRES_NAME=${POSTGRES_DB} 
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - CLIENT_URL=http://frontend:3000
    ports:
      - 8000:8000
    depends_on:
      - db
    develop:
      watch:
        - action: sync
          path: ./backend/src
          target: /app/src
        - action: rebuild
          path: ./backend/pyproject.toml
  frontend:
    image: book-keeper/client
    build:
      context: ./frontend
    entrypoint: npm run dev
    environment:
      - NODE_ENV=development
      - API_URL=http://api:8000/api
    volumes:
      - ./frontend:/app
    ports:
      - 3000:3000
    depends_on:
      - backend
    develop:
      watch:
        - action: sync
          path: ./frontend/src
          target: /app/src
        - action: rebuild
          path: ./frontend/package.json
          target: /app
volumes:
  data: